{"version":3,"file":"static/webpack/static/development/pages/index.js.fa29a82366c7c63ab65f.hot-update.js","sources":["webpack:///./components/Visualizer.js"],"sourcesContent":["import * as THREE from \"three\";\n\n// https://codesandbox.io/s/oxvn0wj1xy\n// https://stackoverflow.com/questions/45353282/how-to-zoom-a-three-js-scene-with-the-mouse-wheel\nclass Visualizer extends React.Component {\n  onDocumentMouseWheel = event => {\n    var fovMAX = 160;\n    var fovMIN = 1;\n\n    console.log(event);\n    camera.position.z = event.offsetX;\n  };\n  componentDidMount() {\n    document.addEventListener(\"mousewheel\", this.onDocumentMouseWheel, false);\n\n    //3D SCENE\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(70, 800 / 600, 1, 3000);\n    camera.position.z = 2000;\n    camera.name = \"camera\";\n    scene.add(camera);\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n    renderer.setSize(800, 600);\n\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xeeeeee\n    });\n\n    const radius = 900;\n    const gap = radius * 0.66;\n    const geometry = new THREE.RingGeometry(gap, radius, 4, 1, 0, Math.PI * 2);\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n    this.mesh = mesh;\n\n    this.renderer = renderer;\n    this.camera = camera;\n    this.scene = scene;\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n    document.removeEventListener(\n      \"mousewheel\",\n      this.onDocumentMouseWheel,\n      false\n    );\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.mesh.rotation.z -= 0.2 * 0.03 + 0.002;\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div\n        // style={{width:'400px', height: '400px', left: '0', top:'0' }}\n        ref={mount => (this.mount = mount)}\n      />\n    );\n  }\n}\n\nexport default Visualizer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAvDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAKA;;;AAkBA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA3EA;AACA;AA6EA;;;;A","sourceRoot":""}